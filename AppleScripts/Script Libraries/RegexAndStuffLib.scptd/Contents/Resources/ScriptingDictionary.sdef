<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE dictionary SYSTEM "file://localhost/System/Library/DTDs/sdef.dtd">
<dictionary title="Dictionary">
    <suite name="Miscellaneous Text Suite" code="ß!St" description="Contains commands for manipulating strings.">
        <class name="reference" code="obj " hidden="yes">
            <synonym name="specifier"/>
        </class>
        <command name="uppercase from" code="ß!Stß!Uf" description="Converts a string or list of strings to uppercase.">
            <direct-parameter description="A string or list of strings.">
                <type type="text">
                </type>
                <type type="text" list="yes">
                </type>
            </direct-parameter>
            <parameter name="using locale" description="Whether to use localized rules in the conversion. Default is false." code="ß!Lz" optional="yes">
                <type type="boolean">
                </type>
            </parameter>
            <result description="The converted string or list of strings.">
                <type type="text">
                </type>
                <type type="text" list="yes">
                </type>
            </result>
        </command>
        
        <command name="lowercase from" code="ß!Stß!Lf" description="Converts a string or list of strings to lowercase.">
            <direct-parameter description="A string or list of strings.">
                <type type="text">
                </type>
                <type type="text" list="yes">
                </type>
            </direct-parameter>
            <parameter name="using locale" description="Whether to use localized rules in the conversion. Default is false." code="ß!Lz" optional="yes">
                <type type="boolean">
                </type>
            </parameter>
            <result description="The converted string or list of strings.">
                <type type="text">
                </type>
                <type type="text" list="yes">
                </type>
            </result>
        </command>
        
        <command name="titlecase from" code="ß!Stß!Tf" description="Converts a string or list of strings to titlecase (initial character of each word in uppercase).">
            <direct-parameter description="A string or list of strings.">
                <type type="text">
                </type>
                <type type="text" list="yes">
                </type>
            </direct-parameter>
            <parameter name="using locale" description="Whether to use localized rules in the conversion. Default is false." code="ß!Lz" optional="yes">
                <type type="boolean">
                </type>
            </parameter>
            <result description="The converted string or list of strings.">
                <type type="text">
                </type>
                <type type="text" list="yes">
                </type>
            </result>
        </command>
        
        <command name="split string" code="ß!Stß!Sp" description="Splits a string.">
            <direct-parameter description="The string to be split. This is just a convenient wrapper around AppleScript's text item delimiters.">
                <type type="text">
                </type>
            </direct-parameter>
            <parameter name="using delimiters" description="A list of strings to use in the splitting." code="ß!Ud" optional="no">
                <type type="text" list="yes">
                </type>
            </parameter>
            <result description="A list of strings.">
                <type type="text" list="yes">
                </type>
            </result>
        </command>
        
        <command name="join strings" code="ß!Stß!Js" description="Joins a list of strings using the provided delimiter.">
            <direct-parameter description="A list of strings to be joined. This is just a convenient wrapper around AppleScript's text item delimiters.">
                <type type="text" list="yes">
                </type>
            </direct-parameter>
            <parameter name="using delimiter" description="The string to insert when joining." code="ß!Us" optional="no">
                <type type="text">
                </type>
            </parameter>
            <result description="The resulting string.">
                <type type="text">
                </type>
            </result>
        </command>
        
        <command name="common prefix of" code="ß!Stß!Rp" description="Returns the prefix two strings have in common.">
            <direct-parameter description="A string.">
                <type type="text">
                </type>
            </direct-parameter>
            <parameter name="with string" description="The second string." code="ß!Ty" optional="no">
                <type type="text">
                </type>
            </parameter>
            <parameter name="match case" description="Whether case matters. Default is false." code="ß!Mc" optional="yes">
                <type type="boolean">
                </type>
            </parameter>
            <result description="The prefix the two strings have in common.">
                <type type="any">
                </type>
            </result>
        </command>
        
    </suite>
    
    <suite name="Regular Expressions Suite" code="ß!Sr" description="Contains commands for manipulating strings.">
        <command name="regex search" code="ß!Srß!Rs" description="Search a string using regular expression pattern. See &lt;http://userguide.icu-project.org/strings/regexp&gt; for details of ICU regular expressions. Note that when there are a large number of matches, searches using a single capture group or a replace template will be considerably quicker than searches for multiple capture groups.">
            <direct-parameter description="The string to search.">
                <type type="text">
                </type>
            </direct-parameter>
            <parameter name="search pattern" description="The regular expression." code="ß!Mp" >
                <type type="text">
                </type>
            </parameter>
            <parameter name="match case" description="Whether case matters. Default is false." code="ß!Mc" optional="yes">
                <type type="boolean">
                </type>
            </parameter>
            <parameter name="dot matches all" description="Whether '.' will match line-break characters. Default is false." code="ß!Md" optional="yes">
                <type type="boolean">
                </type>
            </parameter>
            <parameter name="anchors match lines" description="Whether '^' and '$' will match every line rather than the whole string. Default is true." code="ß!Ma" optional="yes">
                <type type="boolean">
                </type>
            </parameter>
            <parameter name="Unicode boundaries" description="Whether more complex rules are used to define word boundaries. Default is false." code="ß!Mb" optional="yes">
                <type type="boolean">
                </type>
            </parameter>
            <parameter name="replace template" description="A replacement pattern. If you provide this parameter, the results will be transformed accordingly." code="ß!Mr" optional="yes">
                <type type="text">
                </type>
            </parameter>
            <parameter name="capture groups" description="Which capture group or groups to return. Default is capture group 0 (complete match). Ignored if a 'replacement template' parameter is provided. Pass an empty list to return every capture group." code="ß!Mg" optional="yes">
                <type type="integer">
                </type>
                <type type="integer" list="yes">
                </type>
            </parameter>
            <parameter name="using sentinal" description="Whether to speed up processing by using sentinal string unlikely to appear in text. Default is true." code="ß!Ms" optional="yes" hidden="yes">
                <type type="boolean">
                </type>
            </parameter>
           <result description="A list of found strings, or a list of lists if you have specified more than one capture group. Returns an empty list if no matches found.">
                <type type="text">
                </type>
                <type type="text" list="yes">
                </type>
            </result>
        </command>
        
s        <command name="regex search once" code="ß!Srß!Ro" description="Search a string using a regular expression pattern, returning either the first or last match. See &lt;http://userguide.icu-project.org/strings/regexp&gt; for details of ICU regular expressions.">
            <direct-parameter description="The string to search.">
                <type type="text">
                </type>
            </direct-parameter>
            <parameter name="search pattern" description="The regular expression." code="ß!Mp" >
                <type type="text">
                </type>
            </parameter>
            <parameter name="match case" description="Whether case matters. Default is false." code="ß!Mc" optional="yes">
                <type type="boolean">
                </type>
            </parameter>
            <parameter name="dot matches all" description="Whether '.' will match line-break characters. Default is false." code="ß!Md" optional="yes">
                <type type="boolean">
                </type>
            </parameter>
            <parameter name="anchors match lines" description="Whether '^' and '$' will match every line rather than the whole string. Default is true." code="ß!Ma" optional="yes">
                <type type="boolean">
                </type>
            </parameter>
            <parameter name="Unicode boundaries" description="Whether more complex rules are used to define word boundaries. Default is false." code="ß!Mb" optional="yes">
                <type type="boolean">
                </type>
            </parameter>
            <parameter name="backwards search" description="Whether to return the last match instead of the first. Default is false." code="ß!Ml" optional="yes">
                <type type="boolean">
                </type>
            </parameter>
            <parameter name="replace template" description="A replacement pattern. If you provide this parameter, the results will be transformed accordingly." code="ß!Mr" optional="yes">
                <type type="text">
                </type>
            </parameter>
            <parameter name="capture groups" description="Which capture group or groups to return. Default is capture group 0 (complete match). Ignored if a 'replacement template' parameter is provided. Pass an empty list to return every capture group." code="ß!Mg" optional="yes">
                <type type="integer">
                </type>
                <type type="integer" list="yes">
                </type>
            </parameter>
            <result description="The matched string, or a list of strings if you have specified more than one capture group. Returns missing value if no match is found.">
                <type type="text">
                </type>
                <type type="text" list="yes">
                </type>
            </result>
        </command>
        
        <command name="regex change" code="ß!Srß!Rc" description="Search and replace using a regular expression pattern. See &lt;http://userguide.icu-project.org/strings/regexp&gt; for details of ICU regular expressions.">
            <direct-parameter description="The string or list of strings to act on.">
                <type type="text">
                </type>
                <type type="text" list="yes">
                </type>
            </direct-parameter>
            <parameter name="search pattern" description="The regular expression." code="ß!Mp" >
                <type type="text">
                </type>
            </parameter>
            <parameter name="replace template" description="The replacement string or pattern." code="ß!Mr" >
                <type type="text">
                </type>
            </parameter>
            <parameter name="match case" description="Whether case matters. Default is false." code="ß!Mc" optional="yes">
                <type type="boolean">
                </type>
            </parameter>
            <parameter name="dot matches all" description="Whether '.' will match line-break characters. Default is false." code="ß!Md" optional="yes">
                <type type="boolean">
                </type>
            </parameter>
            <parameter name="anchors match lines" description="Whether '^' and '$' will match every line rather than the whole string. Default is true." code="ß!Ma" optional="yes">
                <type type="boolean">
                </type>
            </parameter>
            <parameter name="Unicode boundaries" description="Whether more complex rules are used to define word boundaries. Default is false." code="ß!Mb" optional="yes">
                <type type="boolean">
                </type>
            </parameter>
            <result description="The modified string, or list of modified strings.">
                <type type="text">
                </type>
                <type type="text" list="yes">
                </type>
            </result>
        </command>
        
        <command name="regex batch" code="ß!Srß!Rb" description="Perform a batch of search-and-replace operations using a regular expression pattern. See &lt;http://userguide.icu-project.org/strings/regexp&gt; for details of ICU regular expressions.">
            <direct-parameter description="The string or list of strings to act on.">
                <type type="text">
                </type>
                <type type="text" list="yes">
                </type>
            </direct-parameter>
            <parameter name="change pairs" description="A list of lists, where each sublist consists of the search pattern and the replacement template." code="ß!Mh" >
                <type type="any" list="yes">
                </type>
            </parameter>
            <parameter name="match case" description="Whether case matters. Default is false." code="ß!Mc" optional="yes">
                <type type="boolean">
                </type>
            </parameter>
            <parameter name="dot matches all" description="Whether '.' will match line-break characters. Default is false." code="ß!Md" optional="yes">
                <type type="boolean">
                </type>
            </parameter>
            <parameter name="anchors match lines" description="Whether '^' and '$' will match every line rather than the whole string. Default is true." code="ß!Ma" optional="yes">
                <type type="boolean">
                </type>
            </parameter>
            <parameter name="Unicode boundaries" description="Whether more complex rules are used to define word boundaries. Default is false." code="ß!Mb" optional="yes">
                <type type="boolean">
                </type>
            </parameter>
            <result description="The modified string, or list of modified strings.">
                <type type="text">
                </type>
                <type type="text" list="yes">
                </type>
            </result>
        </command>
        
        <command name="regex split" code="ß!Srß!Rt" description="Split a string using a regular expression as the delimiter. See &lt;http://userguide.icu-project.org/strings/regexp&gt; for details of ICU regular expressions.">
            <direct-parameter description="The string to split.">
                <type type="text">
                </type>
            </direct-parameter>
            <parameter name="search pattern" description="The regular expression." code="ß!Mp" >
                <type type="text">
                </type>
            </parameter>
            <parameter name="match case" description="Whether case matters. Default is false." code="ß!Mc" optional="yes">
                <type type="boolean">
                </type>
            </parameter>
            <parameter name="dot matches all" description="Whether '.' will match line-break characters. Default is false." code="ß!Md" optional="yes">
                <type type="boolean">
                </type>
            </parameter>
            <parameter name="anchors match lines" description="Whether '^' and '$' will match every line rather than the whole string. Default is true." code="ß!Ma" optional="yes">
                <type type="boolean">
                </type>
            </parameter>
            <parameter name="Unicode boundaries" description="Whether more complex rules are used to define word boundaries. Default is false." code="ß!Mb" optional="yes">
                <type type="boolean">
                </type>
            </parameter>
            <result description="The list of strings.">
                <type type="text" list="yes">
                </type>
            </result>
        </command>
        
        <command name="escape for regex" code="ß!Srß!Re" description="Escapes any characters in a string that are otherwise significant in regular expression patterns. See &lt;http://userguide.icu-project.org/strings/regexp&gt; for details of ICU regular expressions.">
            <direct-parameter description="The string to escape.">
                <type type="text">
                </type>
            </direct-parameter>
            <parameter name="template style" description="Whether the string is a replacement template instead of a search pattern. Default is false." code="ß!Mt" optional="yes">
                <type type="boolean">
                </type>
            </parameter>
            <result description="The escaped string.">
                <type type="text">
                </type>
            </result>
        </command>
    </suite>
    
    <suite name="Encode and Transform Suite" code="ß!Se" description="Contains commands for manipulating strings.">
        <command name="percent encode" code="ß!Seß!Rn" description="Encodes strings with percent-escaping. All multi-byte UTF-8 characters are encoded, plus those specified in either of the parameters.">
            <direct-parameter description="The string to encode.">
                <type type="text">
                </type>
            </direct-parameter>
            <parameter name="encoded set" description="Defines which characters are encoded according to the path component being encoded. Ignored if the 'encoded characters' parameter is set. The default is 'path characters', which includes “ &quot;#%;&lt;&gt;?[\]^`{|}”." code="ß!Tx" optional="yes">
                <type type="encoded character set">
                </type>
            </parameter>
            <parameter name="encoded characters" description="A string of characters to be encoded. If set, overrides the 'allowed set' parameter." code="ß!Ty" optional="yes">
                <type type="text">
                </type>
            </parameter>
            <result description="The encoded string.">
                <type type="text">
                </type>
            </result>
        </command>
        
        <command name="percent decode" code="ß!Seß!Rd" description="Decodes percent-escaped strings. Will throw an error if the string has an invalid percent-encoded sequence.">
            <direct-parameter description="The string to decode.">
                <type type="text">
                </type>
            </direct-parameter>
            <result description="The decoded string.">
                <type type="text">
                </type>
            </result>
        </command>
        
        <command name="decimal encode" code="ß!Seß!Rm" description="Encodes string with decimal encoding.">
            <direct-parameter description="The string to encode.">
                <type type="text">
                </type>
            </direct-parameter>
            <result description="The encoded string.">
                <type type="text">
                </type>
            </result>
        </command>
        
        <command name="hex encode" code="ß!Seß!Rx" description="Encodes string with hex encoding.">
            <direct-parameter description="The string to encode.">
                <type type="text">
                </type>
            </direct-parameter>
            <result description="The encoded string.">
                <type type="text">
                </type>
            </result>
        </command>
        
        <command name="hex decode" code="ß!Seß!Rh" description="Decodes both hex and decimal encoding.">
            <direct-parameter description="The string to decode.">
                <type type="text">
                </type>
            </direct-parameter>
            <result description="The encoded string.">
                <type type="text">
                </type>
            </result>
        </command>
        
        <command name="ICU transform" code="ß!Seß!Ru" description="Applies a UCI transform to a string. See &lt;http://userguide.icu-project.org/transforms&gt; for details.">
            <direct-parameter description="The string to transform.">
                <type type="text">
                </type>
            </direct-parameter>
            <parameter name="transform name" description="The name of the transform to apply." code="ß!Tn">
                <type type="text">
                </type>
            </parameter>
            <parameter name="reverse transform" description="Whether the transform should be in the reverse direction. Default is false." code="ß!To" optional="yes">
                <type type="boolean">
                </type>
            </parameter>
            <result description="The transformed string.">
                <type type="text">
                </type>
            </result>
        </command>
        
        <enumeration name="encoded character set" code="ß!Tl" description="Defines the characters that are encoded using the 'percent encode' command.">
            <enumerator name="path characters" code="ß!Cp" description="Characters that need encoding in paths. These are: “ &quot;#%/&lt;&gt;?@\^`{|}”.">
            </enumerator>
            <enumerator name="host characters" code="ß!Ch" description="Characters that need encoding in hosts. These are: “ &quot;#%;&lt;&gt;?[\]^`{|}”.">
            </enumerator>
            <enumerator name="query characters" code="ß!Cq" description="Characters that need encoding in paths. These are: “ &quot;#%&lt;&gt;[\]^`{|}”.">
            </enumerator>
            <enumerator name="fragment characters" code="ß!Cf" description="Characters that need encoding in paths. These are: “ &quot;#%&lt;&gt;[\]^`{|}”.">
            </enumerator>
            <enumerator name="password characters" code="©!Cw" description="Characters that need encoding in paths. These are: “ &quot;#%/:&lt;&gt;?@[\]^`{|}”.">
            </enumerator>
            <enumerator name="user characters" code="©!Cu" description="Characters that need encoding in paths. These are: “ &quot;#%/:&lt;&gt;?@[\]^`”.">
            </enumerator>
        </enumeration>
        
    </suite>
</dictionary>
